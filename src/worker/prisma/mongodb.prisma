generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id    @map("_id")   // 用户 ID，随机生成
  username String  @unique  // 用户名称
  email String  @unique    // 用户邮箱
  avatar String?    // 用户头像
  password String?    // 登录密码(加密)
  github_unionid String?   // github 登陆授权的唯一标识ID
  gitee_unionid String?     // gitee 登陆授权的唯一标识ID
}

model Org {
  id    String @id    @map("_id")   // 团队ID，生成格式变更为：user_id:name
  user_id String    // 关联的用户ID
  secrets String?        // 配置的密钥信息，标准JSON格式
  name String     // 团队名称
  role String     // 用户在团队中的角色
  logo String?    // 团队logo
  cloud_secret String?    // 云账号管理
  description String?  // 团队描述信息
  third_part String?      // 三方绑定(github等)登录的信息
  alias String?        // 团队别名
}

model Application {
  id String @id    @map("_id")   // 应用ID，随机生成
  name String     // 应用名称，在组织下唯一
  org_id String     // 创建应用的人关联的团队ID
  owner_org_id String  // 应用属于某个团队最高管理员的关联团队ID，一个组织仅能一个 ownerId 
  description String?   // 应用描述
  environment String     // 应用的环境配置
  provider String   // 代码托管仓库的平台
  repo_owner String  // 代码托管仓库的拥有者名称
  repo_id String     // 代码在托管平台的仓库ID，provider 和 repo_id 可以组成唯一的数据
  repo_name String   // 代码在托管平台的仓库名称
  repo_url String    // 代码在托管平台的仓库地址
  repo_webhook_secret String?   // 托管平台仓库的 webhook 验证密钥
  created_time DateTime  @default(now())
  updated_time DateTime  @updatedAt
}

model Task {
  id String @id    @map("_id")   // 任务ID，随机生成 如果是CD关联函数计算的异步任务ID
  env_name String   // 被触发的环境名称
  app_id String     // 被触发的应用ID
  status String?    // 运行状态
  steps String?         // 运行步骤 
  dispatch_org_id String?       // 记录谁操作的
  trigger_payload  String?       // 被触发的请求信息
  trigger_type   String? // 记录怎么触发的
  created_time DateTime  @default(now())
  updated_time DateTime  @updatedAt
}
