edition: 1.0.0
name: serverless-cd
access: '{{ access }}'

vars:
  region: '{{region}}'
  service:
    name: '{{serviceName}}'
    description: Serverless-cd 应用
    logConfig: auto
    nasConfig: auto
    # role 需要手动添加 fcfull 的权限，否则会影响取消部署、worker异常处理、自动加载runtime 等能力
    # 如果需要上传到 oss，也需要授予 oss 的权限
  workerFunctionName: worker
  adminFunctionName: admin
  workerDeliverFunctionName: workerDeliver
  domain: '{{domain}}'
  logLocalPathPrefix: /mnt/auto/logs
  databaseUrl: '{{databaseUrl}}'
  prisma: '{{prisma}}'

services:
  worker:
    component: fc
    actions:
      pre-deploy:
        - run: npm install --registry=https://registry.npmmirror.com
          path: './worker'
        - run: npx prisma generate --schema=./prisma/${vars.prisma}.prisma
          path: './worker'
      post-deploy:
        - component: fc api UpdateFunction --region ${vars.region} --header '{"x-fc-disable-container-reuse":"True"}' --path '{"serviceName":"${vars.service.name}","functionName":"${vars.workerFunctionName}"}'
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: ${vars.workerFunctionName}
        description: 执行用户配置的 CD 流程。
        runtime: custom
        codeUri: ./worker
        customRuntimeConfig:
          command:
            - node
            - server
        memorySize: 2048
        timeout: 3600
        layers:
          - acs:fc:${vars.region}:official:layers/Nodejs16/versions/1
          - acs:fc:${vars.region}:1940309364339785:layers/sqlite3/versions/1
        environmentVariables:
          PATH: /opt:/opt/nodejs16/bin:/usr/local/bin/apache-maven/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ruby/bin
          DOMAIN: ${vars.domain} # 用于给用户显示日志链接地址
          LOG_LOCAL_PATH_PREFIX: ${vars.logLocalPathPrefix}
          DATABASE_URL: ${vars.databaseUrl} # 用于链接数据库
        asyncConfiguration:
          maxAsyncRetryAttempts: 0
          statefulInvocation: true
          destination:
            onFailure: acs:fc:::services/${vars.service.name}/functions/${vars.workerDeliverFunctionName}

  worker-deliver:
    component: fc
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: ${vars.workerDeliverFunctionName}
        description: 执行用户配置的 CD 流程。
        runtime: nodejs14
        codeUri: ./worker
        handler: deliver.handler
        memorySize: 640
        timeout: 600
        layers:
          - acs:fc:${vars.region}:1940309364339785:layers/sqlite3/versions/1
        environmentVariables:
          PATH: /opt:/usr/local/bin/apache-maven/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ruby/bin
          DATABASE_URL: ${vars.databaseUrl} # 用于链接数据库
        asyncConfiguration:
          maxAsyncRetryAttempts: 0

  admin: # Admin 控制台提供Api Server函数
    component: fc
    actions:
      pre-deploy:
        - run: npm install --registry=https://registry.npmmirror.com --force
          path: './admin/public'
        - run: npm run build
          path: './admin/public'
        - run: npm install --registry=https://registry.npmmirror.com
          path: './admin'
        - run: npx prisma generate --schema=./prisma/${vars.prisma}.prisma
          path: './admin'
      post-deploy:
        - component: fc invoke --event '{"path":"/api/common/init?prisma={{prisma}}"}'
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: ${vars.adminFunctionName}
        description: serverless-cd 前端应用接口
        runtime: custom
        codeUri: ./admin
        handler: index.handler
        memorySize: 640
        timeout: 360
        caPort: 9000
        instanceConcurrency: 5
        customRuntimeConfig:
          command:
            - node
            - index.js
        layers:
          - acs:fc:${vars.region}:official:layers/Nodejs16/versions/2
          - acs:fc:${vars.region}:1940309364339785:layers/sqlite3/versions/1
        environmentVariables:
          PATH: /opt:/opt/nodejs16/bin:/usr/local/bin/apache-maven/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ruby/bin
          DATABASE_URL: ${vars.databaseUrl} # 用于链接数据库
          LOG_LOCAL_PATH_PREFIX: ${vars.logLocalPathPrefix}
          JWT_SECRET: ${env.JWT_SECRET}
          WEBHOOK_URL: http://${vars.domain}
      triggers:
        - name: http-trigger
          type: http
          config:
            authType: anonymous
            methods:
              - HEAD
              - DELETE
              - POST
              - GET
              - OPTIONS
              - PUT
              - PATCH
      customDomains:
        - domainName: ${vars.domain}
          protocol: HTTP
          routeConfigs:
            - path: /*
              serviceName: ${vars.service.name}
              functionName: ${vars.adminFunctionName}
